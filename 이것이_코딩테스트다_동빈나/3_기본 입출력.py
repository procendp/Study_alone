# 기본 입출력
# 암기해야 할 부분들 있어

# 입력 : 1 2 3 4 5 라면,
# input().split() -> ['1', '2', '3', '4', '5'] .. 공백 기준으로 스플릿 후 문자로 넣어줌
# map(int, input().split()) -> map([1, 2, 3, 4, 5]) .. 정수 형태로 받음

# a, b, c, d, e = map(int, input().split()) .. a, b, c, d, e 에 각각 원소가 매칭되고
# a = list(map(int, input().split())) .. [1, 2, 3, 4, 5] 로 리스트 형태로 저장됨.

# 전형적인 소스코드 1 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
# 데이터의 개수 입력
n = int(input())    # 5
# 각 데이터를 공백 기준으로 구분하여 입력
data = list(map(int, input().split()))  # 65 90 75 34 99
print(data)    # [99, 90, 75, 65, 34]

# 2차원 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
'''
3
4
0 0 0 0
0 0 0 0
0 0 0 0
'''
x = int(input())
y = int(input()) # x와 y를 받은 다음

arr = []
for i in range(x): # 행만큼 반복하고
    arr.append(list(map(int, input().split()))) # 반복할 때마다 공백 기준으로 구분된 리스트를 추가해준다. (리스트 추가하기 때문에 2차원 리스트가 된다.)

# 빠르게 입력 받기 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
# sys 라이브러리에 정의되어 있는 sys.stdin.readline() 메서드 이용
# 단, 입력 후 엔터(Enter)가 줄 바꿈 기호로 입력되므로 rstrip() 메서드 함께 사용하자
# 입력 갯수가 많을 경우, 입력만해도 시간초과 날 수 있음. 그 때 이용하면 효과적
# 사용 빈도 높지 않음
# 정렬, 그래프에 좀 쓰임 .. 많은 수 들어올 때

# import sys
# data = sys.stdin.readline.rstrip()


# print() ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
# 기본적으로 출력 이후 줄 바꿈

# end=' ' 사용하여 줄 바꿈 해제할 수 있음
# print(8, end=' ')
# print(10)         .. # 8 10
