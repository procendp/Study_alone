# 실수형       ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
a = 5.  # 5.0
a = -.7 # -0.7


# 지수표현방식 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
1e9 = 1,000,000,000 # (10의 9제곱)
    # 최단 경로 알고리즘에서는 도달할 수 없는 ㅗㄴ드에 대하여 최단 거리를 무한으로 설정하곤 하는데, 이 때 무한의 값으로 1e9같은 걸 씀.
75.25e1 = 752.5
3954e-3 = 3.954
    # 정수형 데이터로 바꿔 표현하는 게 좋아
         1e9 = 1000000000.0   --> int(1e9) = 1000000000    .. 이런 식으로.

    # 4, 8byte의 고정된 크키에 메모리를 할당하므로, 실수를 표현하는 정확도에 한계가 있음
    # 10진수에선 딱 떨어지지만, 2진수에선 정확한 표현 어려움
    # 0.3 + 0.9 = 0.899999999.. 처럼 표현되곤 함.

    # 이 때를 위해 round() 함수를 이용. <반올림>
         ex) round(123.456, 2) = 123.46


# 자료형 연산  ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
    # 나누기 연산자(/)는 나눠진 결과를 [실수]로 반환.
    # 몫 //
    # 나머지 %
    # 거듭 제곱, 제곱근
          ex) a = 5
              b = 3
              # 거듭 제곱
                 print(a ** b) # 125
              # 제곱근
                 print(a ** 0.5) # 2.23606797749979




 