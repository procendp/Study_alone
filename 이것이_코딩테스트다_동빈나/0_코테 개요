알고리즘 성능평가

1. 복잡도
 - 시간 복잡도 : 특정 크기의 입력에 대해 알고리즘 수행 시간 분석
 - 공간 복잡도 :                         알고리즘 메모리 사용량 분석

                * 복잡도가 낮을수록 좋은 알고리즘

 - 표기법 : 빅오 표기법(Big-O)
             - 가장 빠르게 증가하는 항만 고려(가장 큰 차수)
                ex) 3N**3 + 5N**2 + 1000000000
                    => O(N**3)



****                                                    ****
문제 볼 때, N의 범위를 정확히 캐치해야해.                코테 시간제한은 보통 5초 이하.
ex) N = 500
        -> O(N**3)으로 설계하면 되고
    
    N = 10000000
        -> O(N)으로 설계해야해.

****
수행 시간 측정 소스코드 예제(in python)


import time
start_time = time.time()                    # 측정 시작

# 프로그램 소스코드
end_time = time.time()                      # 측정 종료
print("time:", end_time - start_time)       # 수행 시간 출력 